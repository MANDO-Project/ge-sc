{"FuncToken.sol":{"content":"pragma solidity ^0.4.24;\r\n\r\nimport \u0027./IERC20.sol\u0027;\r\n\r\ncontract ETToken is IERC20 {\r\n    \r\n    \r\n    uint public constant _totalSupply = 93333333319000000000000000000;\r\n    string public constant name = \"League Pay\";\r\n    uint8 public constant decimals = 18;  \r\n    string public constant symbol = \"LP\";               \r\n \r\n    mapping (address =\u003e uint256) balances;\r\n    mapping (address =\u003e mapping (address =\u003e uint256)) allowed;\r\n    \r\n    function ETToken()  {\r\n        balances[msg.sender] = _totalSupply; \r\n    }\r\n        \r\n     function totalSupply() constant returns (uint256 totalSupply){\r\n     return _totalSupply;\r\n  }\r\n    \r\n    function balanceOf(address _owner) constant returns (uint256 balance){\r\n        return balances[_owner];\r\n        \r\n    }\r\n\r\n\r\n    function transfer(address _to, uint256 _value) public returns (bool success) {\r\n       \r\n        require(balances[msg.sender] \u003e= _value \u0026\u0026 balances[_to] + _value \u003e balances[_to]);\r\n        require(_to != 0x0);\r\n        balances[msg.sender] -= _value;\r\n        balances[_to] += _value;\r\n        Transfer(msg.sender, _to, _value);\r\n        return true;\r\n    }\r\n\r\n\r\n    function transferFrom(address _from, address _to, uint256 _value) public returns \r\n    (bool success) {\r\n        require(balances[_from] \u003e= _value \u0026\u0026 allowed[_from][msg.sender] \u003e= _value);\r\n        balances[_to] += _value;\r\n        balances[_from] -= _value; \r\n        allowed[_from][msg.sender] -= _value;\r\n        Transfer(_from, _to, _value);\r\n        return true;\r\n    }\r\n\r\n\r\n    function approve(address _spender, uint256 _value) public returns (bool success)   \r\n    { \r\n        allowed[msg.sender][_spender] = _value;\r\n        Approval(msg.sender, _spender, _value);\r\n        return true;\r\n    }\r\n\r\n    function allowance(address _owner, address _spender) public constant returns (uint256 remaining) {\r\n        return allowed[_owner][_spender];\r\n    }\r\n\r\n}"},"IERC20.sol":{"content":"pragma solidity ^0.4.11;\r\n\r\ninterface IERC20 {\r\n      //function name() constant returns (string name);\r\n      //function symbol() constant returns (string symbol);\r\n     //function decimals() constant returns (uint8 decimals);\r\n      //function totalSupply() constant returns (uint256 totalSupply);\r\n      //function balanceOf(address _owner) constant returns (uint256 balance);\r\n     // function transfer(address _to, uint _value) returns (bool success);\r\n     // function transferFrom(address _from, address _to, uint _value) returns (bool success);\r\n     // function approve(address _spender, uint _value) returns (bool success);\r\n     // function allowance(address _owner, address _spender) constant returns (uint remaining);\r\n      event Transfer(address indexed _from, address indexed _to, uint _value);\r\n      event Approval(address indexed _owner, address indexed _spender, uint _value);\r\n    }"}}